// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/Students.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace gRPC_Server {
  public static partial class Students
  {
    static readonly string __ServiceName = "Students";

    static readonly grpc::Marshaller<global::gRPC_Server.StudentsLookupModel> __Marshaller_StudentsLookupModel = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPC_Server.StudentsLookupModel.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPC_Server.StudentsModel> __Marshaller_StudentsModel = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPC_Server.StudentsModel.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPC_Server.StudentLookup> __Marshaller_StudentLookup = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPC_Server.StudentLookup.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPC_Server.Result> __Marshaller_Result = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPC_Server.Result.Parser.ParseFrom);

    static readonly grpc::Method<global::gRPC_Server.StudentsLookupModel, global::gRPC_Server.StudentsModel> __Method_GetStudentsInfo = new grpc::Method<global::gRPC_Server.StudentsLookupModel, global::gRPC_Server.StudentsModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetStudentsInfo",
        __Marshaller_StudentsLookupModel,
        __Marshaller_StudentsModel);

    static readonly grpc::Method<global::gRPC_Server.StudentLookup, global::gRPC_Server.StudentsModel> __Method_GetAllStudentsInfo = new grpc::Method<global::gRPC_Server.StudentLookup, global::gRPC_Server.StudentsModel>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetAllStudentsInfo",
        __Marshaller_StudentLookup,
        __Marshaller_StudentsModel);

    static readonly grpc::Method<global::gRPC_Server.StudentsLookupModel, global::gRPC_Server.StudentsModel> __Method_DeleteAStudent = new grpc::Method<global::gRPC_Server.StudentsLookupModel, global::gRPC_Server.StudentsModel>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "DeleteAStudent",
        __Marshaller_StudentsLookupModel,
        __Marshaller_StudentsModel);

    static readonly grpc::Method<global::gRPC_Server.StudentsModel, global::gRPC_Server.Result> __Method_AddStudent = new grpc::Method<global::gRPC_Server.StudentsModel, global::gRPC_Server.Result>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddStudent",
        __Marshaller_StudentsModel,
        __Marshaller_Result);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::gRPC_Server.StudentsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Students</summary>
    [grpc::BindServiceMethod(typeof(Students), "BindService")]
    public abstract partial class StudentsBase
    {
      public virtual global::System.Threading.Tasks.Task<global::gRPC_Server.StudentsModel> GetStudentsInfo(global::gRPC_Server.StudentsLookupModel request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task GetAllStudentsInfo(global::gRPC_Server.StudentLookup request, grpc::IServerStreamWriter<global::gRPC_Server.StudentsModel> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task DeleteAStudent(global::gRPC_Server.StudentsLookupModel request, grpc::IServerStreamWriter<global::gRPC_Server.StudentsModel> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::gRPC_Server.Result> AddStudent(global::gRPC_Server.StudentsModel request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(StudentsBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetStudentsInfo, serviceImpl.GetStudentsInfo)
          .AddMethod(__Method_GetAllStudentsInfo, serviceImpl.GetAllStudentsInfo)
          .AddMethod(__Method_DeleteAStudent, serviceImpl.DeleteAStudent)
          .AddMethod(__Method_AddStudent, serviceImpl.AddStudent).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, StudentsBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetStudentsInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPC_Server.StudentsLookupModel, global::gRPC_Server.StudentsModel>(serviceImpl.GetStudentsInfo));
      serviceBinder.AddMethod(__Method_GetAllStudentsInfo, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::gRPC_Server.StudentLookup, global::gRPC_Server.StudentsModel>(serviceImpl.GetAllStudentsInfo));
      serviceBinder.AddMethod(__Method_DeleteAStudent, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::gRPC_Server.StudentsLookupModel, global::gRPC_Server.StudentsModel>(serviceImpl.DeleteAStudent));
      serviceBinder.AddMethod(__Method_AddStudent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPC_Server.StudentsModel, global::gRPC_Server.Result>(serviceImpl.AddStudent));
    }

  }
}
#endregion
